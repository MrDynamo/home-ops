---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: dispatcharr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: dispatcharr
  values:
    controllers:
      dispatcharr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/dispatcharr/dispatcharr
              tag: 0.11.1-20251031190830@sha256:77fff23529a87c125153235e64a7879411b433a889b14f8c300b48b685af2cf2
            env:
              TZ: America/Chicago
              # DISPATCHARR_LOG_LEVEL: DEBUG
              DISPATCHARR_ENV: aio
              REDIS_HOST: localhost
              CELERY_BROKER_URL: redis://localhost:6379/0
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 9191
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 4Gi
                nvidia.com/gpu.shared: 1 # Request portion of shared GPU
    defaultPodOptions:
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nvidia.com/gpu.count
                    operator: Gt
                    values: ["0"]
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
      # tolerations:
      #   - key: nvidia.com/gpu
      #     operator: Exists
      #     effect: NoSchedule
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${INTERNAL_SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /data
      tmp:
        type: emptyDir
